name: Lint & Audit & Build Client
run-name: "üõ†Ô∏è CI Client: ${{ github.event.head_commit.message }} (${{ github.sha }})"

on:
  push:
    paths:
      - "client/**"
      - ".github/workflows/ci-client.yml"
    branches:
      - main
  pull_request:
    paths:
      - "client/**"
      - ".github/workflows/ci-client.yml"
    branches:
      - main
  workflow_dispatch:

jobs:
  debug_changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch the entire history
      - name: List changed files
        run: |
          echo "Changed files:"
          git diff --name-only ${{ github.event.before }} ${{ github.sha }}
          echo "Event context:"
          jq . ${{ github.event_path }}
          
  should_run_client:
    runs-on: ubuntu-latest
    outputs:
      run: ${{ steps.check_changes.outputs.run }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed client files in PR
        id: check_changes
        run: |
          git diff --name-only origin/${{ github.event.pull_request.base.ref }} ${{ github.event.pull_request.head.sha }} | grep '^client/' && echo "::set-output name=run::true" || echo "::set-output name=run::false"
  lint:
    name: üìú Lint Frontend Code
    needs: should_run_client
    if: needs.should_run_client.outputs.run == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Standard Node.js steps
        uses: ./.github/actions/node-steps
        with:
          NODE_VERSION: 22

      - name: Run ESLint
        run: |
          cd client
          npm run lint
        continue-on-error: false

  npm-audit-dependencies:
    name: üõ°Ô∏è Audit Frontend Packages
    needs: should_run_client
    if: needs.should_run_client.outputs.run == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Standard Node.js steps
        uses: ./.github/actions/node-steps
        with:
          NODE_VERSION: 22

      - name: Audit dependencies
        run: |
          cd client
          npm audit --production --audit-level=high
        continue-on-error: false

  static-analysis:
    name: üî¨ Static Analysis (TypeScript)
    needs: should_run_client
    if: needs.should_run_client.outputs.run == 'true'
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Standard Node.js steps
        uses: ./.github/actions/node-steps
        with:
          NODE_VERSION: 22

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: typescript
          queries: +security-extended
          config-file: ./.github/codeql/codeql-config.yml
          dependency-caching: true

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: typescript

  build:
    needs: [lint, npm-audit-dependencies, static-analysis]
    name: üèóÔ∏è Build Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Standard Node.js steps
        uses: ./.github/actions/node-steps
        with:
          NODE_VERSION: 22

      - name: Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: |
            client/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('client/package-lock.json') }}-${{ hashFiles('client/**.[jt]s', 'client/**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('client/package-lock.json') }}-

      - name: Create client/.env.local
        run: |
          cat << 'EOF' > client/.env.local
          NEXT_PUBLIC_SERVER_API_URL=http://localhost:8000
          AUTH_SECRET=${{ secrets.AUTH_SECRET }}
          AUTH_FIREBASE_CLIENT_EMAIL=${{ secrets.AUTH_FIREBASE_CLIENT_EMAIL }}
          AUTH_FIREBASE_PRIVATE_KEY=${{ secrets.AUTH_FIREBASE_PRIVATE_KEY }}
          AUTH_GITHUB_SECRET=${{ secrets.AUTH_GITHUB_SECRET }}
          AUTH_GITHUB_ID=${{ secrets.AUTH_GITHUB_ID }}
          AUTH_FIREBASE_PROJECT_ID=${{ secrets.AUTH_FIREBASE_PROJECT_ID }}
          AUTH_GOOGLE_SECRET=${{ secrets.AUTH_GOOGLE_SECRET }}
          AUTH_GOOGLE_ID=${{ secrets.AUTH_GOOGLE_ID }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          EOF

      - name: Build with Next.js
        run: |
          cd client
          npm run build

      - name: Verify build
        run: |
          cd client
          if [ ! -d ".next" ]; then
            echo "Build failed: .next directory not found"
            exit 1
          fi

  trigger-deploy:
    name: üöö Start Client Deployment
    if: github.ref == 'refs/heads/main'
    needs: [build]
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Dispatch
        uses: benc-uk/workflow-dispatch@v1.2.4
        with:
          workflow: Deploy Next.js to Vercel
          inputs: '{ "ref": "${{ github.sha }}" }'
